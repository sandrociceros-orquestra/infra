version: "3.9"

services:
  server:
    image: alpine:latest
    environment:
      - INFRA_SERVER_TLS_CA=/work/internal/server/testdata/pki/ca.crt
      - INFRA_SERVER_TLS_CA_PRIVATE_KEY=/work/internal/server/testdata/pki/ca.key
      - INFRA_SERVER_DB_CONNECTION_STRING=host=db port=5432 user=postgres dbname=postgres password=postgres
      - INFRA_SERVER_DB_ENCRYPTION_KEY=/work/test/root.key
    command: /work/dist/infra_linux_amd64_v1/infra server --config-file /work/test/dockerfiles/server.yaml
    volumes:
      - ..:/work
    ports:
      - "127.0.0.1:4443:443"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14-alpine
    command: postgres -c fsync=off -c full_page_writes=off -c max_connections=100
    user: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "127.0.0.1:5432:5432"
    tmpfs: /var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5

  destination_ubuntu:
    build:
      context: ./test
      dockerfile: dockerfiles/Dockerfile.debian
      args:
        image_tag: ubuntu:22.10
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup
      - ..:/work
    privileged: true
    depends_on: [server]
    ports: ["127.0.0.1:8220:22"]

  destination_debian:
    build:
      context: ./test
      dockerfile: dockerfiles/Dockerfile.debian
      args:
        image_tag: debian:11-slim
    volumes:
      - ..:/work
    privileged: true
    depends_on: [server]
    stop_grace_period: 1s
    ports: ["127.0.0.1:8221:22"]

  destination_redhat:
    build:
      context: ./test
      dockerfile: dockerfiles/Dockerfile.redhat
    volumes:
      - ..:/work
    privileged: true
    depends_on: [server]
    stop_grace_period: 1s
    ports: ["127.0.0.1:8222:22"]
